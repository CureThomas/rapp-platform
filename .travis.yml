# Generic RAPP Platform Travis Continuous Integration Configuration File
# Author: Manos Tsardoulias, Aris Thallas
# Contact: etsardou@gmail.com, aris.thallas@{iti.gr, gmail.com}
language:
  - cpp
  - python
python:
  - "2.7"
compiler:
  - gcc
notifications:
  email:
    recipients:
      - etsardou@gmail.com
    on_success: always #[always|never|change] # default: change
    on_failure: always #[always|never|change] # default: always
before_install: # Use this to prepare the system to install prerequisites or dependencies
  # Define some config vars
  - export ROS_DISTRO=indigo
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - export RAPP_WS=~/rapp_platform/rapp-platform-catkin-ws
  - export RAPP_PL=$RAPP_WS/src/rapp-platform
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  # Perform system updates and install needed packages
  - echo "Updating the system"
  - sudo apt-get update -qq
  - sudo apt-get upgrade -qq -y
  - echo "Installing needed libraries"
  - sudo apt-get install -qq -y git mercurial screen
  # Clone RAPP Platform repository to gain access to the scripts
  - echo "Cloning rapp-platform to gain access to the installation scripts"
  - mkdir -p ~/rapp_temp && cd ~/rapp_temp
  - git clone https://github.com/rapp-project/rapp-platform.git
install: true # Use this to install any prerequisites or dependencies necessary to run your build
script: # All commands must exit with code 0 on success. Anything else is considered failure.
  # First test the install scripts
  - echo "Performing clean installation of rapp-platform"
  - echo "https://github.com/rapp-project/rapp-platform/wiki/How-can-I-set-up-the-RAPP-Platform-in-my-PC%3F"
  - cd ~/rapp_temp/rapp-platform/rapp_scripts/
  - bash clean_install.sh travis
  - source ~/.bashrc
  - sudo ldconfig
  - sudo ln -s /usr/bin/nodejs /usr/bin/node
  - echo "RAPP Platform installed. Executing unit and functional tests"
  # Run unit and functional tests
  - cd $RAPP_WS
  - catkin_make run_tests -j1
  # Run integration tests
  - echo "Unit and functional tests ok. Executing integration tests"
  - screen -S rapp_ros -d -m -X $RAPP_PL/rapp_scripts/deploy/.deploy_rapp_ros.sh
  - screen -S rapp_hop -d -m -X $RAPP_PL/rapp_scripts/deploy/.deploy_web_services.sh
  - rosrun rapp_testing_tools rapp_run_test.py
  # Create documentation
  - echo "Creating online documentation"
  - cd $RAPP_PL/rapp_scripts/documentation
  - bash update_rapp-project.github.io.sh
  - echo "Documentation created and updated online"
